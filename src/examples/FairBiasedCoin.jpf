# app checked by JPF
target=probabilistic.test.FairBiasedCoin

# command line arguments of app
target.args=0.7

# directory that contains the bytecode of the app
classpath=${jpf-probabilistic}/build/examples

# using the JPF extensions jpf-label and jpf-probabilistic
@using jpf-label
@using jpf-probabilistic

# label the states in which flip returns with the returned value
label.class=label.ReturnedIntegerMethod
label.ReturnedIntegerMethod.method=probabilistic.examples.FairBiasedCoin.flip(double)

# generate a textual representation of the labelled Markov chain
listener=label.StateLabelText,probabilistic.listener.StateSpaceText

# generate a graphical representation of the labelled Markov chain 
listener+=,probabilistic.listener.StateSpaceDot,probabilistic.listener.StateLabelVisitor